name: Build and Publish on Release

on:
  release:
    types:
      - [ published ]

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Get Game Version From Gradle
      id: get_game_version
      run: |
        export GAME_VERSION=$(grep -r -oP '(?<=org\.spigotmc:spigot-api:)\d+\.\d+\.\d+' build.gradle | head -n1)

    - name: Build with Gradle
      run: ./gradlew shadowJar

    - name: Get Name of Jar File
      id: get_jar_name
      run: |
        export JAR_NAME=$(ls build/libs | grep .jar)

    - name: Upload Artifact to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./build/libs/${{ env.JAR_NAME }}
        asset_name: ${{ env.JAR_NAME }}
        asset_content_type: application/java-archive

    - name: Publish to Modrinth
      env:
        MODRINTH_API_KEY: ${{ secrets.MODRINTH_API_KEY }}
        MODRINTH_PROJECT_ID: "VxyZQvPV"
        
      run: |
        
        if [[ "${{ github.event.release.version }}" =~ "alpha" ]]; then
          VERSION_TYPE="alpha"
        elif [[ "${{ github.event.release.version }}" =~ "beta" ]]; then
          VERSION_TYPE="beta"
        else
          VERSION_TYPE="release"
        fi

        curl -X POST -H "Content-Type: multipart/form-data" -H "Authorization: Bearer $MODRINTH_API_KEY" \
        -F "data={"name": "${{ github.event.release.name }}", "changelog": "${{ github.event.release.body }}", "version_number": "${{ github.event.release.tag-name }}", "version_type": "$VERSION_TYPE", "game_versions": ["$GAME_VERSION"] \
        -F "file=@$JAR_NAME" "https://api.modrinth.com/api/v1/version"

    # - name: Publish to CurseForge
    #   uses: ItsTheDodo/curseforge-publish@1.3.0
    #   with:
    #     projectId: <your_curseforge_project_id>
    #     apiKey: ${{ secrets.CURSEFORGE_API_KEY }}
    #     file: ./build/libs/your_project_output.jar
    #     changelog: "Changelog: ${GITHUB_REF#refs/tags/}"

    # - name: Create new version on Spigot
    #   env:
    #     SPIGOT_API_KEY: ${{ secrets.SPIGOT_API_KEY }}
    #   run: |
    #     VERSION_NAME="${GITHUB_REF#refs/tags/}"
    #     DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/$VERSION_NAME/your_project_output.jar"
    #     curl -X POST -H "Content-Type: application/json" -H "X-Api-Key: $SPIGOT_API_KEY" \
    #     -d "{\"name\":\"$VERSION_NAME\",\"download\":\"$DOWNLOAD_URL\",\"tag\":\"$VERSION_NAME\",\"changelog\":\"Changelog: $VERSION_NAME\"}" \
    #     "https://api.spigotmc.org/v2/resources/<your_spigot_resource_id>/versions"
